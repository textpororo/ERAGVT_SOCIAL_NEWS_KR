
;**********************************************************
@SCHEDULE
;SC_MODE	단련이나 특별 활동
;		0：단련　1：특별활동　2：정보수집
;SC_FLAG	스케쥴 사용 여부(ON/OFF)　MODE별로 설정
;SC_LIMIT	스케쥴의 설정 총수　MODE별로 설정
;SC_ACTION	다음 행동 시에 몇 번째를 실행할 것인가
;SC_ITEM	실제 설정값　MODE마다 0-8… 이라면 될텐데 어째선지 루프로 범위 밖까지 가버리니까 좀 넉넉하게
;NOW_INPUT	어디에 입력할 것인가
;ITEM_NUM	설정할 수 있는 항목의 수　0-98　99는 삭제
;LINENUM	항목 일람의 최대 행수(현재는 자유행동의 8)
;IT_FLAG	그 항목이 사용 가능한지의 여부　0-99
;SC_STR		항목 표시용 문자열　0-99
;**********************************************************
#DIM LCOUNT, 2
#DIM CCOUNT
#DIM SC_MODE
#DIM SC_FLAG, 10
#DIM SC_LIMIT, 10
#DIM SC_ACTION, 10
#DIM SC_ITEM, 10, 12
#DIM NOW_INPUT
#DIM ITEM_NUM
#DIM LINENUM = 8;항목 일람의 최대 행수(현재는 자유행동의 8)
#DIM IT_FLAG, 100
#DIM LOST
#DIMS SC_STR, 100
;행방불명된 동료가 있는지 없는지 서치 (히로인 시점에서는 거두어진 캐릭터도 찾는 편이 자연스럽지만 일단 제외)
LOST = CHARANUM_PRISON()+CHARANUM_ENSLAVED()

REDRAW 0
DRAWLINE

;CFLAG로부터 로컬(LOCAL)변수에
FOR LCOUNT, 0, 4
	NOW_INPUT = CFLAG:(LCOUNT + 110)
	IF NOW_INPUT < 0
		SC_FLAG:LCOUNT = 0
		NOW_INPUT = ABS(NOW_INPUT)
	ELSE
		SC_FLAG:LCOUNT = 1
	ENDIF
	SC_LIMIT:LCOUNT = 0
	FOR LCOUNT:1, 0, 9
		SIF NOW_INPUT % 100 > 0
			SC_LIMIT:LCOUNT = LCOUNT:1
		SC_ITEM:LCOUNT:(LCOUNT:1) = NOW_INPUT % 100
		NOW_INPUT /= 100
	NEXT
	SIF SC_ITEM:LCOUNT:0 != 0
		SC_LIMIT:LCOUNT += 1
	SC_ACTION:LCOUNT = NOW_INPUT
NEXT

SC_MODE = 0
SIF CFLAG:100 == 104
	SC_MODE = 1
SIF CFLAG:100 == 107
	SC_MODE = 2

NOW_INPUT = (SC_LIMIT:SC_MODE + 11) * 10

$CHANGE_MODE
FOR LCOUNT, 0, 100
	IT_FLAG:LCOUNT = 0
	SC_STR:LCOUNT = 
NEXT

;스케쥴 문자열 등 설정
;단련
IF SC_MODE == 0
	ITEM_NUM = 11

	IT_FLAG:0 = 1
	SC_STR:0 = 런닝

	IT_FLAG:1 = 1
	SC_STR:1 = 정신 단련

	IT_FLAG:2 = 1
	SC_STR:2 = 명상

	IT_FLAG:3 = 1
	SC_STR:3 = 근력 운동 

	IT_FLAG:4 = 1
	SC_STR:4 = 자기 방어 훈련

	IT_FLAG:5 = 1
	SC_STR:5 = 대시(Dash)

	SIF TALENT:변신능력 != -1
		IT_FLAG:6 = 1
	SC_STR:6 = 근거리 전투 훈련

	SIF TALENT:변신능력 != -1
		IT_FLAG:7 = 1
	SC_STR:7 = 중거리 전투 훈련

	SIF TALENT:변신능력 != -1
		IT_FLAG:8 = 1
	SC_STR:8 = 원거리 전투 훈련

	IT_FLAG:9 = 1
	SC_STR:9 = 전술 연구

	SIF TALENT:변신능력 == -1
		IT_FLAG:10 = 1
	SC_STR:10 = 기초 전투 훈련
ENDIF

;특별 활동
IF SC_MODE == 1
	ITEM_NUM = 9

	IT_FLAG:0 = 1
	SC_STR:0 = 아르바이트

	IT_FLAG:1 = 1
	IF (EXP:출산경험 > 0 || TALENT:임신 == 1 || TALENT:임신 == 3)
		SC_STR:1 = 연구소 검사 협력
	ELSE
		SC_STR:1 = 연구소 조수
	ENDIF

	IT_FLAG:2 = 1
	SC_STR:2 = 잡몹 촉수 퇴치

	;욕망으로 원조 교제 해방
	SIF ABL:욕망 > 0 && ISHOLE() == 1
		IT_FLAG:3 = 1
	SC_STR:3 = 원조 교제

	;욕망과 노출벽, 또는 매춘 횟수로 AV 출연 해방
	SIF (ABL:욕망 + ABL:노출벽 >= 5 || CFLAG:283 >= 10) && ISHOLE() == 1
		IT_FLAG:4 = 1
	SC_STR:4 = AV 출연

	;욕망과 마조끼로 공중 변소 해방
	SIF ABL:욕망 + ABL:마조끼 >= 5 && ISHOLE() == 1
		IT_FLAG:5 = 1
	SC_STR:5 = 공중 변소

	IT_FLAG:6 = 1
	SC_STR:6 = 아이돌 활동

	;데뷔 후라면 베개 영업 해방
	SIF EXP:매료경험 > 99 && ISHOLE() == 1
		IT_FLAG:7 = 1
	SC_STR:7 = 베개 영업

	;※라이브 공연 지정은 아이돌 활동으로 통합
	;데뷔 후이며 주말이라면 라이브 공연 해방
	;SIF EXP:매료경험 > 99
	;	IT_FLAG:8 = 1
	;SC_STR:8 = 라이브 공연
ENDIF

;정보 수집
IF SC_MODE == 2
	ITEM_NUM = 4

	IT_FLAG:0 = 1
	SC_STR:0 = 소문난 이야기 탐문

	IT_FLAG:1 = 1
	SC_STR:1 = 사건 수사

	;정보원과의 연줄을 본다
	SIF CFLAG:122 > 0
		IT_FLAG:2 = 1
	SC_STR:2 = 정보 구입

	;동료 수색
	SIF LOST > 0
		IT_FLAG:3 = 1
	SC_STR:3 = 동료 수색
ENDIF

;자유행동
IF SC_MODE == 3
	ITEM_NUM = 21

	IT_FLAG:0 = 1
	SC_STR:0 = 학교에 간다
	IT_FLAG:1 = 1
	SC_STR:1 = 랜덤 외출
	IT_FLAG:2 = 1
	SC_STR:2 = 랜덤(거리)
	IT_FLAG:3 = 1
	SC_STR:3 = 랜덤(여행)
	IT_FLAG:4 = 1
	SC_STR:4 = 랜덤(운동)
	IT_FLAG:5 = 1
	SC_STR:5 = 거리：アミューズメント施設
	IT_FLAG:6 = 1
	SC_STR:6 = 거리：繁華街
	IT_FLAG:7 = 1
	SC_STR:7 = 거리：ショッピングモール
	IT_FLAG:8 = 1
	SC_STR:8 = 거리：公園
	IT_FLAG:9 = 1
	SC_STR:9 = 여행：動物園
	IT_FLAG:10 = 1
	SC_STR:10 = 여행：水族館
	IT_FLAG:11 = 1
	SC_STR:11 = 여행：遊園地
	IT_FLAG:12 = 1
	SC_STR:12 = 여행：植物園
	IT_FLAG:13 = 1
	SC_STR:13 = 여행：ライブ
	IT_FLAG:14 = 1
	SC_STR:14 = 여행：ウォーターパーク
	IT_FLAG:15 = 1
	SC_STR:15 = 여행：海辺
	IT_FLAG:16 = 1
	SC_STR:16 = 여행：温泉
	IT_FLAG:17 = 1
	SC_STR:17 = 운동：運動公園
	IT_FLAG:18 = 1
	SC_STR:18 = 운동：フィットネスクラブ
	IT_FLAG:19 = 1
	SC_STR:19 = 운동：マッサージサロン
	IT_FLAG:20 = 1
	SC_STR:20 = 운동：プール

ENDIF

;현재의 MODE 표시
PRINTFORM  %CALLNAME%의 
IF SC_MODE == 0
	PRINTL 단련 스케쥴 설정
ELSEIF SC_MODE == 1
	PRINTL 특별 활동 스케쥴 설정
ELSEIF SC_MODE == 2
	PRINTL 정보 수집 스케쥴 설정
ELSEIF SC_MODE == 3
	PRINTL 자유 행동 스케쥴 설정
ENDIF
DRAWLINE

$INPUT_LOOP

;각 변수 정규화
SIF SC_LIMIT:SC_MODE < 1
	SC_LIMIT:SC_MODE = 0
SIF SC_LIMIT:SC_MODE > 10
	SC_LIMIT:SC_MODE = 10
SIF NOW_INPUT < 110
	NOW_INPUT = 110
SIF NOW_INPUT > 190
	NOW_INPUT = 190
SIF SC_ACTION:SC_MODE > SC_LIMIT:SC_MODE
	SC_ACTION:SC_MODE = SC_LIMIT:SC_MODE
SIF SC_ITEM:SC_MODE:(SC_ACTION:SC_MODE) == 0
	SC_ACTION:SC_MODE -= 1
SIF SC_ACTION:SC_MODE < 0
	SC_ACTION:SC_MODE = 0

SETCOLOR 0, 0, 0
SIF NOW_INPUT == 110
	SETCOLOR 255, 255, 0
PRINTFORM 　　　　　%UNICODE(0x250F)%%UNICODE(0x2501) * 12%%UNICODE(0x2513)%
RESETCOLOR
PRINTPLAIN 　　　　　　　　　　　

SIF SC_MODE == 0
	SETCOLOR 255, 255, 0
PRINTFORML \@SC_MODE == 0 ? %UNICODE(0x25BA)% # %UNICODE(0x00A0)% \@ [200] 단련
RESETCOLOR

FOR LCOUNT, 0, 9

	SIF LCOUNT > SC_LIMIT:SC_MODE
		SETCOLOR 96, 96, 96
	PRINTFORM 　[\@LCOUNT > SC_LIMIT:SC_MODE ? --- # {(LCOUNT + 11) * 10} \@] 
	SETCOLOR 255, 255, 0
	PRINTFORM 　\@NOW_INPUT == (LCOUNT + 11) * 10 ? %UNICODE(0x2503)% # 　 \@
	RESETCOLOR

	SIF LCOUNT > SC_LIMIT:SC_MODE
		SETCOLOR 96, 96, 96
	PRINTFORM \@SC_ITEM:SC_MODE:LCOUNT > 0 ? %SC_STR:(SC_ITEM:SC_MODE:LCOUNT - 1), 24, LEFT% # 　―――　　　　　　　　 \@
	RESETCOLOR

	SETCOLOR 255, 255, 0
	PRINTFORM \@NOW_INPUT == (LCOUNT + 11) * 10 ? %UNICODE(0x2503)% # 　 \@\@SC_ACTION:SC_MODE == LCOUNT ? %UNICODE(0x25C4)% # %UNICODE(0x00A0)% \@
	RESETCOLOR

	IF LCOUNT == 0
		PRINTPLAIN 　　　　　　　　　　 
		SIF SC_MODE == 1
			SETCOLOR 255, 255, 0
		PRINTFORM \@SC_MODE == 1 ? %UNICODE(0x25BA)% # %UNICODE(0x00A0)% \@ [201] 특별 활동
		RESETCOLOR
	ENDIF

	IF LCOUNT == 1
		PRINTPLAIN 　　　　　　　　　　 
		SIF SC_MODE == 3
			SETCOLOR 255, 255, 0
		PRINTFORM \@SC_MODE == 3 ? %UNICODE(0x25BA)% # %UNICODE(0x00A0)% \@ [203] 자유 행동
		RESETCOLOR
	ENDIF

	PRINTPLAIN 　
	SIF LCOUNT == 3
		PRINTFORM 　　　　　　　　　　 %BASENAME:1, 6, LEFT%：{MAXBASE:기력, 6}

	SIF LCOUNT == 5
		PRINTFORM 　　　　　　　　　　 %BASENAME:11, 6, LEFT%：{MAXBASE:방어, 6}

	SIF LCOUNT == 6
		PRINTFORM 　　　　　　　　　　 %BASENAME:13, 6, LEFT%：{MAXBASE:지성, 6}

	SIF LCOUNT == 8
		PRINTPLAIN 　  실행할 수 없는 경우 휴식을 취합니다.
	PRINTL 

	SETCOLOR 0, 0, 0
	SIF NOW_INPUT == (LCOUNT + 11) * 10 || NOW_INPUT == (LCOUNT + 12) * 10
		SETCOLOR 255, 255, 0
	PRINTFORM 　　　　　\@NOW_INPUT == (LCOUNT + 11) * 10 ? %UNICODE(0x2517)%%UNICODE(0x2501) * 12%%UNICODE(0x251B)% # %UNICODE(0x250F)%%UNICODE(0x2501) * 12%%UNICODE(0x2513)% \@
	RESETCOLOR

	IF LCOUNT == 0
		PRINTPLAIN 　　　　　　　　　　 
		SIF SC_MODE == 2
			SETCOLOR 255, 255, 0
		PRINTFORM \@SC_MODE == 2 ? %UNICODE(0x25BA)% # %UNICODE(0x00A0)% \@  [202] 정보 수집
		RESETCOLOR
	ENDIF

	SIF LCOUNT == 2
		PRINTFORM 　　　　　　　　　　　　%BASENAME:0, 6, LEFT%：{MAXBASE:체력, 6}

	SIF LCOUNT == 3
		PRINTFORM 　　　　　　　　　　　　%BASENAME:2, 6, LEFT%：{MAXBASE:성내성, 6}

	SIF LCOUNT == 4
		PRINTFORM 　　　　　　　　　　　　%BASENAME:10, 6, LEFT%：{MAXBASE:공격, 6}

	SIF LCOUNT == 5
		PRINTFORM 　　　　　　　　　　　　%BASENAME:12, 6, LEFT%：{MAXBASE:민첩, 6}

	SIF LCOUNT == 6
		PRINTFORM 　　　　　　　　근LV：{ABL:근거리} 　중LV：{ABL:중거리} 　원LV：{ABL:원거리}

	SIF LCOUNT == 7
		PRINTPLAIN 　　※ 행동 시 위에서부터 순서대로 반복 실행됩니다.

;MODE 변경 버튼 표시
;	IF LCOUNT == 0
;		PRINTPLAIN 　　　　　　　　　　  
;		SIF SC_MODE == 1
;			SETCOLOR 255, 255, 0
;		PRINTFORM \@SC_MODE == 2 ? %UNICODE(0x25BA)% # %UNICODE(0x00A0)% \@ [202] 
;		RESETCOLOR
;	ENDIF

	PRINTL 
NEXT
DRAWLINE

FOR LCOUNT, 0, ITEM_NUM
	SIF IT_FLAG:LCOUNT == 0
		SETCOLOR 96, 96, 96
	PRINTFORM [\@IT_FLAG:LCOUNT ? {LCOUNT + 1, 2} # ― \@]\@IT_FLAG:LCOUNT ? %SC_STR:LCOUNT, 20, LEFT% # 　――　　　　　　　 \@
	RESETCOLOR
	PRINTPLAIN  
	IF LCOUNT % 3 == 2 && LCOUNT > 0
		PRINTL 
	ENDIF
NEXT
SIF ITEM_NUM % 3 != 0
	PRINTL 
;4행 미리 결정(4行決め打ち)으로 맞추고 있기에 장래 12항 이상이 되는 경우는 여기와 ↓아래의 CLEARLINE 2개를 고쳐 쓴다
FOR LCOUNT,0,LINENUM-(ITEM_NUM+2)/3
	PRINTL 
NEXT
PRINTL [99] 항목 삭제　　　　　

DRAWLINE
PRINT [999] 결정　[998] 취소　　　
PRINTPLAIN  　　　　　　 　　　　
PRINTFORML [997] 스케쥴 기능 - \@SC_FLAG:SC_MODE ? ON # OFF \@

INPUT

;MODE 변경
IF RESULT >= 200 && RESULT < 204
	SC_MODE = RESULT - 200
	NOW_INPUT = (SC_LIMIT:SC_MODE + 11) * 10
	CLEARLINE 26 + (ITEM_NUM / 3) + SQRT(ITEM_NUM % 3)+(LINENUM-(ITEM_NUM+2)/3)
	GOTO CHANGE_MODE
;항목 삭제
ELSEIF RESULT == 99
	;미설정 항목을 삭제해도 SC_LIMIT 는 줄지 않는다
	SIF SC_ITEM:SC_MODE:(NOW_INPUT / 10 - 11) != 0
		SC_LIMIT:SC_MODE -= 1
	FOR LCOUNT, 0, 21 - NOW_INPUT / 10
		IF LCOUNT > 8
			SC_ITEM:SC_MODE:(NOW_INPUT / 10 - 11 + LCOUNT) = 0
		ELSE
			SC_ITEM:SC_MODE:(NOW_INPUT / 10 - 11 + LCOUNT) = SC_ITEM:SC_MODE:(NOW_INPUT / 10 - 10 + LCOUNT)
		ENDIF
	NEXT
;항목 입력
ELSEIF RESULT > 0 && RESULT < ITEM_NUM + 1 && IT_FLAG:(RESULT - 1) > 0
	;미설정 항목에 입력한 경우에만 SC_LIMIT 가 늘어난다
	SIF SC_ITEM:SC_MODE:(NOW_INPUT / 10 - 11) == 0
		SC_LIMIT:SC_MODE += 1
	SC_ITEM:SC_MODE:(NOW_INPUT / 10 - 11) = RESULT
	NOW_INPUT += 10
;입력 장소 변경
ELSEIF RESULT > 100 && RESULT < 200 && RESULT % 10 == 0
	NOW_INPUT = RESULT
;스케쥴 사용 ON/OFF
ELSEIF RESULT == 997
	INVERTBIT SC_FLAG:SC_MODE, 0
;취소　설정을 저장하지 않고 종료
ELSEIF RESULT == 998
	RETURN 0
;결정　설정을 저장하고 종료
ELSEIF RESULT == 999
	FOR LCOUNT, 0, 4
		CFLAG:(LCOUNT + 110) = 0
		FOR LCOUNT:1, 0, 9
			CFLAG:(LCOUNT + 110) *= 100
			CFLAG:(LCOUNT + 110) += SC_ITEM:LCOUNT:(8 - LCOUNT:1)
		NEXT
		SC_ACTION:LCOUNT *= 1000000000000000000
		CFLAG:(LCOUNT + 110) += SC_ACTION:LCOUNT
		SIF SC_FLAG:LCOUNT == 0
			CFLAG:(LCOUNT + 110) *= -1
	NEXT
	RETURN 0
ELSE
ENDIF

CLEARLINE 24 + (ITEM_NUM / 3) + SQRT(ITEM_NUM % 3)+(LINENUM-(ITEM_NUM+2)/3)

GOTO INPUT_LOOP


;**********************************************************
@RES_SCHEDULE, ARG,ARG:1=-1
;**********************************************************
;ARG		사용하는 CFLAG
;SC_RES		최종적으로 RETURN하는 값
;SC_VAR:0	실행 번호(ARG:1 지정 시에는 참조만)
;SC_VAR:1	스케쥴의 총설 상수(総設定数)

#DIM SC_RES
#DIM SC_VAR, 2

SC_VAR = CFLAG:ARG / 1000000000000000000
SC_VAR:1 = CFLAG:ARG % 1000000000000000000
SIF ARG:1 != -1
	SC_VAR:0 = ARG:1

STRLENFORM {SC_VAR:1}
SC_VAR:1 = RESULT

SIF SC_VAR:1 % 2 == 1
	SC_VAR:1 += 1
SC_VAR:1 /= 2

SC_RES = (CFLAG:ARG / POWER(100, SC_VAR)) % 100 - 1

SIF ARG:1 == -1
	CFLAG:ARG = CFLAG:ARG % 1000000000000000000
SC_VAR += 1

SIF SC_VAR > 8
	SC_VAR = 0

SIF SC_VAR > SC_VAR:1 - 1
	SC_VAR = 0

SC_VAR *= 1000000000000000000

SIF ARG:1 == -1
	CFLAG:ARG += SC_VAR

RETURN SC_RES

;스케줄 총수 체크
@NUM_SCHEDULE_F(ARG)
#FUNCTION
RETURNF CFLAG:ARG % 1000000000000000000